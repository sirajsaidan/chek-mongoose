{
  "{\"sourceRoot\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\",\"filename\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose",
      "filename": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _Person = _interopRequireDefault(require(\"./Person\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_mongoose[\"default\"].connect('mongodb://localhost/test', {\n  useNewUrlParser: true\n});\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_bodyParser[\"default\"].json()); //read body json//\n\napp.post('/add', function (req, res) {\n  // create person//\n  var person = new _Person[\"default\"](req.body);\n  person.save();\n  res.send(\"success\");\n});\napp.get(\"/persons\", function (_, res) {\n  _Person[\"default\"].find(function (e, r) {\n    res.json(r);\n  });\n});\napp.get(\"/favorit/:food\", function (req, res) {\n  var food = req.params.food;\n\n  _Person[\"default\"].findOne({\n    favoriteFoods: food.trim()\n  }, function (e, r) {\n    console.log(food);\n    res.json(r);\n  });\n});\napp.get(\"/person/:id\", function (req, res, next) {\n  //if we dont found with id go to search with Favorite food//\n  _Person[\"default\"].findById(req.params.id, function (e, r) {\n    if (!r) next();else {\n      res.json(r);\n    }\n  });\n});\napp.post(\"/person/edit\", function (req, res) {\n  var _req$body = req.body,\n      id = _req$body.id,\n      newFood = _req$body.newFood;\n\n  _Person[\"default\"].findByIdAndUpdate(id, {\n    $push: {\n      favoriteFoods: newFood\n    }\n  }, {\n    \"new\": true\n  }, function (e, r) {\n    res.json(r);\n  });\n});\napp.post(\"/person/editWithName\", function (req, res) {\n  var _req$body2 = req.body,\n      name = _req$body2.name,\n      age = _req$body2.age;\n\n  _Person[\"default\"].findOneAndUpdate({\n    name: name\n  }, {\n    $set: {\n      age: age\n    }\n  }, {\n    \"new\": true\n  }, function (e, r) {\n    res.json(r);\n  });\n});\napp.get(\"/person/delete/:id\", function (req, res) {\n  _Person[\"default\"].findByIdAndRemove(req.params.id, function (e, r) {\n    res.json(r);\n  });\n});\napp.get(\"/person/massDelete/:name\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var rest;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(req.params.name);\n            _context.next = 3;\n            return _Person[\"default\"].remove({\n              name: req.params.name\n            });\n\n          case 3:\n            rest = _context.sent;\n            res.json(rest);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get(\"/person/:food\", function (req, res) {\n  _Person[\"default\"].find({\n    favoriteFoods: req.params.food\n  }).sort({\n    name: 1\n  }).limit(2).select({\n    age: 0\n  }).exec(function (e, r) {\n    res.json(r);\n  });\n});\nvar PORT = 8080;\napp.listen(PORT, function () {\n  return console.log(\"App started \");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9zdCIsInJlcSIsInJlcyIsInBlcnNvbiIsIlBlcnNvbiIsImJvZHkiLCJzYXZlIiwic2VuZCIsImdldCIsIl8iLCJmaW5kIiwiZSIsInIiLCJmb29kIiwicGFyYW1zIiwiZmluZE9uZSIsImZhdm9yaXRlRm9vZHMiLCJ0cmltIiwiY29uc29sZSIsImxvZyIsIm5leHQiLCJmaW5kQnlJZCIsImlkIiwibmV3Rm9vZCIsImZpbmRCeUlkQW5kVXBkYXRlIiwiJHB1c2giLCJuYW1lIiwiYWdlIiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRzZXQiLCJmaW5kQnlJZEFuZFJlbW92ZSIsInJlbW92ZSIsInJlc3QiLCJzb3J0IiwibGltaXQiLCJzZWxlY3QiLCJleGVjIiwiUE9SVCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFDQUEscUJBQVNDLE9BQVQsQ0FBaUIsMEJBQWpCLEVBQTZDO0FBQUNDLEVBQUFBLGVBQWUsRUFBRTtBQUFsQixDQUE3Qzs7QUFFQSxJQUFNQyxHQUFHLEdBQUUsMEJBQVg7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxVQUFYLENBQXNCO0FBQzFCQyxFQUFBQSxRQUFRLEVBQUU7QUFEZ0IsQ0FBdEIsQ0FBUjtBQUdBSixHQUFHLENBQUNDLEdBQUosQ0FBUUMsdUJBQVdHLElBQVgsRUFBUixFLENBQTRCOztBQUU1QkwsR0FBRyxDQUFDTSxJQUFKLENBQVMsTUFBVCxFQUFnQixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBVztBQUFFO0FBQzdCLE1BQU1DLE1BQU0sR0FBQyxJQUFJQyxrQkFBSixDQUFXSCxHQUFHLENBQUNJLElBQWYsQ0FBYjtBQUNBRixFQUFBQSxN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Q0MsR0FBUixDQUFZLGNBQVosQ0FBSjtBQUFBLENBQWhCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcc29maWVuLnNhaWRhblxcc2lyYWpcXGNoZWstbW9uZ29vc2VcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCJcclxuaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiXHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xyXG5pbXBvcnQgUGVyc29uIGZyb20gJy4vUGVyc29uJ1xyXG5tb25nb29zZS5jb25uZWN0KCdtb25nb2RiOi8vbG9jYWxob3N0L3Rlc3QnLCB7dXNlTmV3VXJsUGFyc2VyOiB0cnVlfSk7XHJcblxyXG5jb25zdCBhcHA9IGV4cHJlc3MoKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe1xyXG4gICAgZXh0ZW5kZWQ6IGZhbHNlXHJcbiB9KSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpOyAvL3JlYWQgYm9keSBqc29uLy9cclxuXHJcbmFwcC5wb3N0KCcvYWRkJywocmVxLHJlcyk9PnsgLy8gY3JlYXRlIHBlcnNvbi8vXHJcbmNvbnN0IHBlcnNvbj1uZXcgUGVyc29uKHJlcS5ib2R5KVxyXG5wZXJzb24uc2F2ZSgpO1xyXG5yZXMuc2VuZChcInN1Y2Nlc3NcIilcclxufSk7XHJcbmFwcC5nZXQoXCIvcGVyc29uc1wiLChfLHJlcyk9PntcclxuICAgIFBlcnNvbi5maW5kKChlLHIpPT57XHJcbiAgICAgICAgcmVzLmpzb24ocilcclxuICAgIH0pXHJcbn0pXHJcbmFwcC5nZXQoXCIvZmF2b3JpdC86Zm9vZFwiLChyZXEscmVzKT0+e1xyXG4gICAgbGV0IHtmb29kfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBQZXJzb24uZmluZE9uZSh7ZmF2b3JpdGVGb29kczpmb29kLnRyaW0oKX0sKGUscik9PntcclxuICAgICAgICBjb25zb2xlLmxvZyhmb29kKVxyXG4gICAgICAgIHJlcy5qc29uKHIpXHJcbiAgICB9KVxyXG5cclxufSlcclxuYXBwLmdldChcIi9wZXJzb24vOmlkXCIsKHJlcSxyZXMsbmV4dCk9PnsgLy9pZiB3ZSBkb250IGZvdW5kIHdpdGggaWQgZ28gdG8gc2VhcmNoIHdpdGggRmF2b3JpdGUgZm9vZC8vXHJcblxyXG5QZXJzb24uZmluZEJ5SWQocmVxLnBhcmFtcy5pZCwoZSxyKT0+e1xyXG4gICAgaWYoIXIpXHJcbiAgICBuZXh0KClcclxuICAgIGVsc2V7XHJcbiAgICAgICAgcmVzLmpzb24ocilcclxuICAgIH1cclxuICAgIFxyXG59KVxyXG59KVxyXG5hcHAucG9zdChcIi9wZXJzb24vZWRpdFwiLChyZXEscmVzKT0+e1xyXG5jb25zdCB7aWQsbmV3Rm9vZH09cmVxLmJvZHlcclxuUGVyc29uLmZpbmRCeUlkQW5kVXBkYXRlKGlkLHskcHVzaDp7ZmF2b3JpdGVGb29kczpuZXdGb29kfX0se25ldzp0cnVlfSwoZSxyKT0+e1xyXG4gICAgcmVzLmpzb24ocilcclxufSkgICAgXHJcbn0pXHJcbmFwcC5wb3N0KFwiL3BlcnNvbi9lZGl0V2l0aE5hbWVcIiwocmVxLHJlcyk9PntcclxuICAgIGNvbnN0IHtuYW1lLGFnZX09cmVxLmJvZHlcclxuICAgIFBlcnNvbi5maW5kT25lQW5kVXBkYXRlKHtuYW1lfSx7JHNldDp7YWdlfX0se25ldzp0cnVlfSwoZSxyKT0+e1xyXG4gICAgICAgIHJlcy5qc29uKHIpXHJcbiAgICB9KSAgICBcclxuICAgIH0pXHJcbiAgICBhcHAuZ2V0KFwiL3BlcnNvbi9kZWxldGUvOmlkXCIsKHJlcSxyZXMpPT57XHJcbiAgICAgICAgUGVyc29uLmZpbmRCeUlkQW5kUmVtb3ZlKHJlcS5wYXJhbXMuaWQsKGUscik9PntcclxuICAgICAgICAgICAgcmVzLmpzb24ocilcclxuICAgICAgICB9KSAgICBcclxuICAgICAgICB9KVxyXG4gICAgICAgIGFwcC5nZXQoXCIvcGVyc29uL21hc3NEZWxldGUvOm5hbWVcIixhc3luYyhyZXEscmVzKT0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXEucGFyYW1zLm5hbWUpXHJcbiAgICAgICAgIGNvbnN0IHJlc3QgPSAgYXdhaXQgUGVyc29uLnJlbW92ZSh7bmFtZTpyZXEucGFyYW1zLm5hbWV9KTtcclxuICAgICAgICAgcmVzLmpzb24ocmVzdClcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICB9ICkgICAgXHJcbiAgICAgICAgICBhcHAuZ2V0KFwiL3BlcnNvbi86Zm9vZFwiLChyZXEscmVzKT0+e1xyXG4gICAgICAgICAgICAgIFBlcnNvbi5maW5kKHtmYXZvcml0ZUZvb2RzOnJlcS5wYXJhbXMuZm9vZH0pXHJcbiAgICAgICAgICAgICAgLnNvcnQoe25hbWU6MX0pXHJcbiAgICAgICAgICAgICAgLmxpbWl0KDIpXHJcbiAgICAgICAgICAgICAgLnNlbGVjdCh7YWdlOjB9KVxyXG4gICAgICAgICAgICAgIC5leGVjKChlLHIpPT57XHJcbiAgICAgICAgICAgICAgICAgIHJlcy5qc29uKHIpXHJcbiAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBcclxuY29uc3QgUE9SVD04MDgwXHJcbmFwcC5saXN0ZW4oUE9SVCwoKT0+Y29uc29sZS5sb2coXCJBcHAgc3RhcnRlZCBcIikpXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mongoose",
        "connect",
        "useNewUrlParser",
        "app",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "person",
        "Person",
        "body",
        "save",
        "send",
        "get",
        "_",
        "find",
        "e",
        "r",
        "food",
        "params",
        "findOne",
        "favoriteFoods",
        "trim",
        "console",
        "log",
        "next",
        "findById",
        "id",
        "newFood",
        "findByIdAndUpdate",
        "$push",
        "name",
        "age",
        "findOneAndUpdate",
        "$set",
        "findByIdAndRemove",
        "remove",
        "rest",
        "sort",
        "limit",
        "select",
        "exec",
        "PORT",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\",
      "sourcesContent": [
        "import express from \"express\"\r\nimport mongoose from \"mongoose\"\r\nimport bodyParser from 'body-parser'\r\nimport Person from './Person'\r\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\r\n\r\nconst app= express();\r\napp.use(bodyParser.urlencoded({\r\n    extended: false\r\n }));\r\napp.use(bodyParser.json()); //read body json//\r\n\r\napp.post('/add',(req,res)=>{ // create person//\r\nconst person=new Person(req.body)\r\nperson.save();\r\nres.send(\"success\")\r\n});\r\napp.get(\"/persons\",(_,res)=>{\r\n    Person.find((e,r)=>{\r\n        res.json(r)\r\n    })\r\n})\r\napp.get(\"/favorit/:food\",(req,res)=>{\r\n    let {food} = req.params;\r\n    Person.findOne({favoriteFoods:food.trim()},(e,r)=>{\r\n        console.log(food)\r\n        res.json(r)\r\n    })\r\n\r\n})\r\napp.get(\"/person/:id\",(req,res,next)=>{ //if we dont found with id go to search with Favorite food//\r\n\r\nPerson.findById(req.params.id,(e,r)=>{\r\n    if(!r)\r\n    next()\r\n    else{\r\n        res.json(r)\r\n    }\r\n    \r\n})\r\n})\r\napp.post(\"/person/edit\",(req,res)=>{\r\nconst {id,newFood}=req.body\r\nPerson.findByIdAndUpdate(id,{$push:{favoriteFoods:newFood}},{new:true},(e,r)=>{\r\n    res.json(r)\r\n})    \r\n})\r\napp.post(\"/person/editWithName\",(req,res)=>{\r\n    const {name,age}=req.body\r\n    Person.findOneAndUpdate({name},{$set:{age}},{new:true},(e,r)=>{\r\n        res.json(r)\r\n    })    \r\n    })\r\n    app.get(\"/person/delete/:id\",(req,res)=>{\r\n        Person.findByIdAndRemove(req.params.id,(e,r)=>{\r\n            res.json(r)\r\n        })    \r\n        })\r\n        app.get(\"/person/massDelete/:name\",async(req,res)=>{\r\n            console.log(req.params.name)\r\n         const rest =  await Person.remove({name:req.params.name});\r\n         res.json(rest)\r\n            \r\n          } )    \r\n          app.get(\"/person/:food\",(req,res)=>{\r\n              Person.find({favoriteFoods:req.params.food})\r\n              .sort({name:1})\r\n              .limit(2)\r\n              .select({age:0})\r\n              .exec((e,r)=>{\r\n                  res.json(r)\r\n              })\r\n\r\n          })\r\n            \r\nconst PORT=8080\r\napp.listen(PORT,()=>console.log(\"App started \"))\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1599937969210
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\",\"filename\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\\\\Person.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\sofien.saidan\\\\siraj\\\\chek-mongoose\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose",
      "filename": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\Person.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\Person.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\Person.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\",
        "sourceFileName": "Person.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar PersonSchema = new Schema({\n  name: String,\n  // String is shorthand for {type: String}\n  age: Number,\n  favoriteFoods: [String]\n});\n\nvar Person = _mongoose[\"default\"].model('Person', PersonSchema);\n\nvar _default = Person;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbi5qcyJdLCJuYW1lcyI6WyJTY2hlbWEiLCJtb25nb29zZSIsIlBlcnNvblNjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJhZ2UiLCJOdW1iZXIiLCJmYXZvcml0ZUZvb2RzIiwiUGVyc29uIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztJQUNVQSxNLEdBQVdDLG9CLENBQVhELE07QUFFUixJQUFNRSxZQUFZLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzlCRyxFQUFBQSxJQUFJLEVBQUdDLE1BRHVCO0FBQ2Y7QUFDZkMsRUFBQUEsR0FBRyxFQUFFQyxNQUZ5QjtBQUc5QkMsRUFBQUEsYUFBYSxFQUFJLENBQUNILE1BQUQ7QUFIYSxDQUFYLENBQXJCOztBQU1BLElBQU1JLE1BQU0sR0FBR1AscUJBQVNRLEtBQVQsQ0FBZSxRQUFmLEVBQXlCUCxZQUF6QixDQUFmOztlQUVnQk0sTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHNvZmllbi5zYWlkYW5cXHNpcmFqXFxjaGVrLW1vbmdvb3NlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG4gIGNvbnN0IHsgU2NoZW1hIH0gPSBtb25nb29zZTtcclxuXHJcbiAgY29uc3QgUGVyc29uU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBuYW1lOiAgU3RyaW5nLCAvLyBTdHJpbmcgaXMgc2hvcnRoYW5kIGZvciB7dHlwZTogU3RyaW5nfVxyXG4gICAgYWdlOiBOdW1iZXIsXHJcbiAgICBmYXZvcml0ZUZvb2RzOiAgIFtTdHJpbmddLFxyXG4gICAgXHJcbiAgfSk7XHJcbiAgY29uc3QgUGVyc29uID0gbW9uZ29vc2UubW9kZWwoJ1BlcnNvbicsIFBlcnNvblNjaGVtYSk7XHJcblxyXG4gIGV4cG9ydCBkZWZhdWx0ICBQZXJzb24iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Person.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "PersonSchema",
        "name",
        "String",
        "age",
        "Number",
        "favoriteFoods",
        "Person",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;IACUA,M,GAAWC,oB,CAAXD,M;AAER,IAAME,YAAY,GAAG,IAAIF,MAAJ,CAAW;AAC9BG,EAAAA,IAAI,EAAGC,MADuB;AACf;AACfC,EAAAA,GAAG,EAAEC,MAFyB;AAG9BC,EAAAA,aAAa,EAAI,CAACH,MAAD;AAHa,CAAX,CAArB;;AAMA,IAAMI,MAAM,GAAGP,qBAASQ,KAAT,CAAe,QAAf,EAAyBP,YAAzB,CAAf;;eAEgBM,M",
      "sourceRoot": "C:\\Users\\sofien.saidan\\siraj\\chek-mongoose\\",
      "sourcesContent": [
        "import mongoose from 'mongoose';\r\n  const { Schema } = mongoose;\r\n\r\n  const PersonSchema = new Schema({\r\n    name:  String, // String is shorthand for {type: String}\r\n    age: Number,\r\n    favoriteFoods:   [String],\r\n    \r\n  });\r\n  const Person = mongoose.model('Person', PersonSchema);\r\n\r\n  export default  Person"
      ]
    },
    "sourceType": "script",
    "mtime": 1599859341993
  }
}